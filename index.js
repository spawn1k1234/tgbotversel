// const { Telegraf, Markup, Scenes, session } = require("telegraf");
// const { connectDB, getDB } = require("./db");
// require("dotenv").config();

// const bot = new Telegraf(process.env.BOT_TOKEN);

// // –¢–µ–∫—Å—Ç "–û –Ω–∞—Å" ‚Äî –±–æ–ª–µ–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π, —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ –∫–∞—á–µ—Å—Ç–≤–æ
// const aboutText = `
// *PODLUXSWEGAM ‚Äî –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –ª—é–∫—Å-–∫–æ–ø–∏–π –∏–∑ –ö–∏—Ç–∞—è!*

// –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–π –≤–µ—â–∏, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–π –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—É, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—è—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã.

// –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç PodLuxSwegam?
// ‚Ä¢ –°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
// ‚Ä¢ –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
// ‚Ä¢ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
// ‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∑–∞–∫–∞–∑—É

// –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ ‚Äî –º—ã —Ü–µ–Ω–∏–º –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ –≤–∞—à–µ–º—É —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É –≤ —Å—Ç–∏–ª–µ!
// `;

// // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Telegram-–∫–∞–Ω–∞–ª
// function mainMenu() {
//   return Markup.inlineKeyboard([
//     [
//       Markup.button.url(
//         "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
//         "https://t.me/podluxswegam"
//       ),
//     ],
//     [
//       Markup.button.url(
//         "üì∏ –ù–∞—à Instagram",
//         "https://instagram.com/your_instagram"
//       ),
//     ],
//     [
//       Markup.button.url(
//         "üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª",
//         "https://t.me/your_channel_username"
//       ),
//     ],
//     [Markup.button.callback("‚ÑπÔ∏è –û –Ω–∞—Å", "about_info")],
//     [Markup.button.callback("üéÅ –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏", "promo")],
//   ]);
// }

// // –°—Ü–µ–Ω–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
// const broadcastScene = new Scenes.WizardScene(
//   "broadcast",
//   async (ctx) => {
//     if (ctx.from.id.toString() !== process.env.ADMIN_ID) {
//       await ctx.reply("‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
//       return ctx.scene.leave();
//     }
//     await ctx.reply("üì∑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:");
//     return ctx.wizard.next();
//   },
//   async (ctx) => {
//     if (!ctx.message.photo) {
//       await ctx.reply("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.");
//       return;
//     }
//     ctx.wizard.state.photo =
//       ctx.message.photo[ctx.message.photo.length - 1].file_id;
//     await ctx.reply("‚úèÔ∏è –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:");
//     return ctx.wizard.next();
//   },
//   async (ctx) => {
//     if (!ctx.message.text) {
//       await ctx.reply("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.");
//       return;
//     }
//     ctx.wizard.state.caption = ctx.message.text;
//     await ctx.replyWithPhoto(ctx.wizard.state.photo, {
//       caption: ctx.wizard.state.caption,
//     });
//     await ctx.reply("‚úÖ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ç–æ–≤. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É? (–¥–∞/–Ω–µ—Ç)");
//     return ctx.wizard.next();
//   },
//   async (ctx) => {
//     const confirmation = ctx.message.text.toLowerCase();
//     if (confirmation === "–¥–∞") {
//       const db = getDB();
//       const users = await db.collection("users").find().toArray();
//       for (const user of users) {
//         try {
//           await ctx.telegram.sendPhoto(user.chatId, ctx.wizard.state.photo, {
//             caption: ctx.wizard.state.caption,
//           });
//         } catch (error) {
//           console.error(
//             `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.chatId}:`,
//             error
//           );
//         }
//       }
//       await ctx.reply("üì¢ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
//     } else {
//       await ctx.reply("‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.");
//     }
//     return ctx.scene.leave();
//   }
// );

// const stage = new Scenes.Stage([broadcastScene]);
// bot.use(session());
// bot.use(stage.middleware());

// // –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –±–æ–ª–µ–µ —Å–µ—Ä—å—ë–∑–Ω—ã–º —Ç–æ–Ω–æ–º
// bot.start(async (ctx) => {
//   const db = getDB();
//   const user = {
//     chatId: ctx.chat.id,
//     username: ctx.from.username,
//     first_name: ctx.from.first_name,
//   };

//   await db
//     .collection("users")
//     .updateOne({ chatId: user.chatId }, { $set: user }, { upsert: true });

//   await ctx.reply(
//     `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${
//       ctx.from.first_name || "—É–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç"
//     }! üëã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PODLUXSWEGAM ‚Äî –º–∞–≥–∞–∑–∏–Ω –ª—é–∫—Å-–∫–æ–ø–∏–π –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:`,
//     mainMenu()
//   );
// });

// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å" —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∞–∫—Ü–∏–∏
// bot.action("about_info", async (ctx) => {
//   await ctx.answerCbQuery();
//   await ctx.editMessageText(aboutText, {
//     parse_mode: "Markdown",
//     ...Markup.inlineKeyboard([
//       [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "main_menu")],
//       [Markup.button.callback("üéÅ –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏", "promo")],
//     ]),
//   });
// });

// // –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏ ‚Äî –±–æ–ª–µ–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å, —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞ –º–∞–≥–∞–∑–∏–Ω –∏ –Ω–∞–∑–∞–¥
// const promoText = `
// üéâ *–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç PodLuxSwegam*

// - –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º: WELCOME10
// - –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 1000 —é–∞–Ω–µ–π
// - –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –Ω–æ–≤–∏–Ω–∫–∏

// –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –Ω–µ —É–ø—É—Å–∫–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!
// `;

// bot.action("promo", async (ctx) => {
//   await ctx.answerCbQuery();
//   await ctx.editMessageText(promoText, {
//     parse_mode: "Markdown",
//     ...Markup.inlineKeyboard([
//       [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "main_menu")],
//       [
//         Markup.button.webApp(
//           "üõç –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω",
//           "https://podluxswegam-lok7.vercel.app"
//         ),
//       ],
//     ]),
//   });
// });

// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" ‚Äî –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
// bot.action("main_menu", async (ctx) => {
//   await ctx.answerCbQuery();
//   await ctx.editMessageText(
//     `–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
//     mainMenu()
//   );
// });

// // –ö–æ–º–∞–Ω–¥–∞ /about ‚Äî —Ç–æ–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç "–û –Ω–∞—Å"
// bot.command("about", async (ctx) => {
//   await ctx.replyWithMarkdown(aboutText, mainMenu());
// });

// // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
// bot.command("broadcast", (ctx) => ctx.scene.enter("broadcast"));

// // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
// (async () => {
//   await connectDB();
//   bot.launch();
//   console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
// })();

// // Graceful stop
// process.once("SIGINT", () => bot.stop("SIGINT"));
// process.once("SIGTERM", () => bot.stop("SIGTERM"));
const { Telegraf, Markup, Scenes, session } = require("telegraf");
const { connectDB, getDB } = require("./db");
const fs = require("fs");
const path = require("path");
require("dotenv").config();

const bot = new Telegraf(process.env.BOT_TOKEN);
const CHANNEL_USERNAME = "podluxswegamtg"; // –ë–µ–∑ @

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
function logAction(action, userId, username) {
  const logMessage = `[${new Date().toISOString()}] Action: ${action}, UserID: ${userId}, Username: @${
    username || "–Ω–µ—Ç"
  }\n`;
  fs.appendFileSync(path.join(__dirname, "bot.log"), logMessage);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞
const isAdmin = (ctx, next) => {
  if (ctx.from.id.toString() === process.env.ADMIN_ID) {
    return next();
  }
  ctx.reply("‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
async function checkSubscription(ctx, next) {
  try {
    const member = await ctx.telegram.getChatMember(
      `@${CHANNEL_USERNAME}`,
      ctx.from.id
    );
    if (member.status === "left") {
      return ctx.reply(
        "üì¢ –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:",
        Markup.inlineKeyboard([
          Markup.button.url(
            "üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è",
            `https://t.me/${CHANNEL_USERNAME}`
          ),
          Markup.button.callback("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", "check_subscription"),
        ])
      );
    }
    return next();
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:", err);
    return next(); // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
  }
}

// –¢–µ–∫—Å—Ç "–û –Ω–∞—Å"
const aboutText = `
*PODLUXSWEGAM ‚Äî –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –ª—é–∫—Å-–∫–æ–ø–∏–π –∏–∑ –ö–∏—Ç–∞—è!*

–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–π –≤–µ—â–∏, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–π –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—É, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—è—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã.

–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç PodLuxSwegam?  
‚Ä¢ –°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞  
‚Ä¢ –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏  
‚Ä¢ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤  
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∑–∞–∫–∞–∑—É  

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ ‚Äî –º—ã —Ü–µ–Ω–∏–º –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ –≤–∞—à–µ–º—É —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É –≤ —Å—Ç–∏–ª–µ!
`;

// –¢–µ–∫—Å—Ç –∞–∫—Ü–∏–π
const promoText = `
üéâ *–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç PodLuxSwegam*

- –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º: WELCOME10  
- –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 1000 —é–∞–Ω–µ–π  
- –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –Ω–æ–≤–∏–Ω–∫–∏  

–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –Ω–µ —É–ø—É—Å–∫–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!
`;

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function mainMenu() {
  return Markup.inlineKeyboard([
    [
      Markup.button.url(
        "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
        "https://t.me/podluxswegam"
      ),
    ],
    [
      Markup.button.url(
        "üì∏ –ù–∞—à Instagram",
        "https://instagram.com/your_instagram"
      ),
    ],
    [
      Markup.button.url(
        "üîî –ù–∞—à Telegram-–∫–∞–Ω–∞–ª",
        `https://t.me/${CHANNEL_USERNAME}`
      ),
    ],
    [Markup.button.callback("‚ÑπÔ∏è –û –Ω–∞—Å", "about_info")],
    [Markup.button.callback("üéÅ –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏", "promo")],
    [Markup.button.callback("üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", "leave_feedback")],
    [
      Markup.button.webApp(
        "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥",
        "https://podluxswegam-lok7.vercel.app"
      ),
    ],
  ]);
}

// –°—Ü–µ–Ω–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
const broadcastScene = new Scenes.WizardScene(
  "broadcast",
  async (ctx) => {
    if (ctx.from.id.toString() !== process.env.ADMIN_ID) {
      await ctx.reply("‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
      return ctx.scene.leave();
    }
    await ctx.reply("üì∑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    if (!ctx.message.photo) {
      await ctx.reply("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.");
      return;
    }
    ctx.wizard.state.photo =
      ctx.message.photo[ctx.message.photo.length - 1].file_id;
    await ctx.reply("‚úèÔ∏è –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    if (!ctx.message.text) {
      await ctx.reply("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.");
      return;
    }
    ctx.wizard.state.caption = ctx.message.text;
    await ctx.replyWithPhoto(ctx.wizard.state.photo, {
      caption: ctx.wizard.state.caption,
    });
    await ctx.reply("‚úÖ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ç–æ–≤. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É? (–¥–∞/–Ω–µ—Ç)");
    return ctx.wizard.next();
  },
  async (ctx) => {
    const confirmation = ctx.message.text.toLowerCase();
    if (confirmation === "–¥–∞") {
      const db = getDB();
      const users = await db.collection("users").find().toArray();
      for (const user of users) {
        try {
          await ctx.telegram.sendPhoto(user.chatId, ctx.wizard.state.photo, {
            caption: ctx.wizard.state.caption,
          });
        } catch (error) {
          console.error(
            `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.chatId}:`,
            error
          );
        }
      }
      await ctx.reply("üì¢ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
    } else {
      await ctx.reply("‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.");
    }
    return ctx.scene.leave();
  }
);

// –°—Ü–µ–Ω–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
const feedbackScene = new Scenes.WizardScene(
  "feedback",
  (ctx) => {
    ctx.reply("üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    const feedback = ctx.message.text;
    await ctx.reply(
      "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    );
    const db = getDB();
    await db.collection("feedback").insertOne({
      userId: ctx.from.id,
      username: ctx.from.username,
      text: feedback,
      date: new Date(),
    });
    return ctx.scene.leave();
  }
);

const stage = new Scenes.Stage([broadcastScene, feedbackScene]);
bot.use(session());
bot.use(stage.middleware());

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ª—é–±–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
bot.use(async (ctx, next) => {
  const db = getDB();
  const user = {
    chatId: ctx.chat.id,
    username: ctx.from.username,
    first_name: ctx.from.first_name,
    last_name: ctx.from.last_name,
    lastActivity: new Date(),
  };
  await db
    .collection("users")
    .updateOne({ chatId: user.chatId }, { $set: user }, { upsert: true });
  return next();
});

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(checkSubscription, async (ctx) => {
  logAction("start", ctx.from.id, ctx.from.username);
  await ctx.reply(
    `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${
      ctx.from.first_name || "—É–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç"
    }! üëã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PODLUXSWEGAM ‚Äî –º–∞–≥–∞–∑–∏–Ω –ª—é–∫—Å-–∫–æ–ø–∏–π –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:`,
    mainMenu()
  );
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.command("help", checkSubscription, (ctx) => {
  ctx.replyWithMarkdown(
    `
*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/about - –û –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏
/promo - –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏
/help - –ü–æ–º–æ—â—å

–î–ª—è –∞–¥–º–∏–Ω–æ–≤:
/broadcast - –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
  `,
    mainMenu()
  );
});

// –ö–æ–º–∞–Ω–¥–∞ /about
bot.command("about", checkSubscription, async (ctx) => {
  await ctx.replyWithMarkdown(aboutText, mainMenu());
});

// –ö–æ–º–∞–Ω–¥–∞ /promo
bot.command("promo", checkSubscription, async (ctx) => {
  await ctx.replyWithMarkdown(
    promoText,
    Markup.inlineKeyboard([
      [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "main_menu")],
      [
        Markup.button.webApp(
          "üõç –ö–∞—Ç–∞–ª–æ–≥",
          "https://podluxswegam-lok7.vercel.app"
        ),
      ],
    ])
  );
});

// –ö–æ–º–∞–Ω–¥–∞ /stats (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
bot.command("stats", isAdmin, async (ctx) => {
  const db = getDB();
  const userCount = await db.collection("users").countDocuments();
  const feedbackCount = await db.collection("feedback").countDocuments();
  ctx.reply(
    `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:*
  
üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}
üìù –û—Ç–∑—ã–≤–æ–≤: ${feedbackCount}`,
    { parse_mode: "Markdown" }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("text", checkSubscription, (ctx) => {
  const text = ctx.message.text.toLowerCase();
  if (text.includes("–ø—Ä–∏–≤–µ—Ç") || text.includes("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ")) {
    ctx.reply("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", mainMenu());
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
bot.action("about_info", checkSubscription, async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText(aboutText, {
    parse_mode: "Markdown",
    ...Markup.inlineKeyboard([
      [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "main_menu")],
      [Markup.button.callback("üéÅ –ê–∫—Ü–∏–∏", "promo")],
    ]),
  });
});

bot.action("promo", checkSubscription, async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText(promoText, {
    parse_mode: "Markdown",
    ...Markup.inlineKeyboard([
      [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "main_menu")],
      [
        Markup.button.webApp(
          "üõç –ö–∞—Ç–∞–ª–æ–≥",
          "https://podluxswegam-lok7.vercel.app"
        ),
      ],
    ]),
  });
});

bot.action("main_menu", checkSubscription, async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText(
    `–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
    mainMenu()
  );
});

bot.action("leave_feedback", checkSubscription, (ctx) =>
  ctx.scene.enter("feedback")
);
bot.action("check_subscription", checkSubscription, async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.deleteMessage();
  ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", mainMenu());
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
bot.command("broadcast", isAdmin, (ctx) => ctx.scene.enter("broadcast"));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error(`–û—à–∏–±–∫–∞ –¥–ª—è ${ctx.updateType}:`, err);
  ctx.reply("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
(async () => {
  await connectDB();
  bot.launch();
  console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
})();

// Graceful stop
process.once("SIGINT", () => bot.stop("SIGINT"));
process.once("SIGTERM", () => bot.stop("SIGTERM"));
