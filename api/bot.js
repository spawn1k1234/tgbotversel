const { Telegraf, Markup } = require("telegraf");
const fs = require("fs");
const path = require("path");

const BOT_TOKEN = process.env.BOT_TOKEN;
if (!BOT_TOKEN) throw new Error("BOT_TOKEN is required!");

const bot = new Telegraf(BOT_TOKEN);
const chatIdsFile = path.join(__dirname, "..", "chat_ids.json");

// üîê –ù–∞–¥—ë–∂–Ω–æ–µ —á—Ç–µ–Ω–∏–µ chat_ids —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –ø—É—Å—Ç–æ–≥–æ/–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
let chatIds = [];
try {
  if (fs.existsSync(chatIdsFile)) {
    const data = fs.readFileSync(chatIdsFile, "utf8");
    chatIds = data ? JSON.parse(data) : [];
  } else {
    // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç - —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤ —Ñ–∞–π–ª–µ
    fs.writeFileSync(chatIdsFile, "[]", "utf8");
    chatIds = [];
  }
} catch (error) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ chat_ids.json:", error.message);
  chatIds = [];
}

bot.start((ctx) => {
  const chatId = ctx.chat.id;
  if (!chatIds.includes(chatId)) {
    chatIds.push(chatId);
    try {
      fs.writeFileSync(chatIdsFile, JSON.stringify(chatIds, null, 2));
      console.log(`‚úÖ –ù–æ–≤—ã–π chat_id —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${chatId}`);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ chat_ids.json:", error.message);
    }
  }

  return ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç, ${
      ctx.from.first_name || "–¥—Ä—É–≥"
    }! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω.`,
    Markup.inlineKeyboard([
      [
        Markup.button.url(
          "üõç –ú–∞–≥–∞–∑–∏–Ω",
          "https://your-mini-app-link.example.com"
        ),
      ],
      [Markup.button.url("üì∏ Instagram", "https://instagram.com/yourshop")],
      [Markup.button.url("üí¨ –ú–µ–Ω–µ–¥–∂–µ—Ä", "https://t.me/your_manager")],
    ])
  );
});

module.exports = async (req, res) => {
  if (req.method === "POST") {
    try {
      await bot.handleUpdate(req.body, res);
      res.status(200).send("OK");
    } catch (error) {
      console.error("Bot error:", error);
      res.status(500).send("Internal Server Error");
    }
  } else {
    // –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    res.setHeader("Content-Type", "text/html; charset=utf-8");
    res.end(`
      <!DOCTYPE html>
      <html lang="ru">
      <head>
        <meta charset="UTF-8" />
        <title>–ü–∞–Ω–µ–ª—å –±–æ—Ç–∞</title>
      </head>
      <body>
        <h2>Telegram bot is running</h2>
        <form method="POST" action="/api/broadcast" enctype="multipart/form-data">
          <label>–¢–µ–∫—Å—Ç:</label><br/>
          <textarea name="text" rows="4" cols="50"></textarea><br/><br/>
          <label>–§–æ—Ç–æ:</label><br/>
          <input type="file" name="photo" /><br/><br/>
          <button type="submit">üì¢ –†–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å</button>
        </form>
        <br/>
        <form method="GET" action="/api/downloadChatIds">
          <button type="submit">üì• –°–∫–∞—á–∞—Ç—å chat_id</button>
        </form>
        <br/>
        <form method="POST" action="/api/uploadChatIds" enctype="multipart/form-data">
          <label>–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å chat_id:</label>
          <input type="file" name="file" />
          <button type="submit">üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å chat_id</button>
        </form>
      </body>
      </html>
    `);
  }
};
