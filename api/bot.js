const { Telegraf, Markup } = require("telegraf");

const BOT_TOKEN = process.env.BOT_TOKEN;
const SHOP_URL = "https://your-mini-app-link.example.com";
const INSTAGRAM_URL = "https://instagram.com/yourshop";
const MANAGER_URL = "https://t.me/your_manager";

if (!BOT_TOKEN) {
  throw new Error("BOT_TOKEN must be –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω!");
}

const bot = new Telegraf(BOT_TOKEN);

bot.start((ctx) => {
  return ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç, ${
      ctx.from.first_name || "–¥—Ä—É–≥"
    }! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω. –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—à Mini App, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã.`,
    Markup.inlineKeyboard([
      [Markup.button.url("üõç –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω", SHOP_URL)],
      [Markup.button.url("üì∏ Instagram", INSTAGRAM_URL)],
      [Markup.button.url("üí¨ –ú–µ–Ω–µ–¥–∂–µ—Ä", MANAGER_URL)],
    ])
  );
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è Vercel
module.exports = async function handler(req, res) {
  try {
    if (req.method === "POST") {
      await bot.handleUpdate(req.body, res);
      res.status(200).send("OK");
    } else {
      res.status(200).send("Telegram bot endpoint");
    }
  } catch (error) {
    console.error(error);
    res.status(500).send("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
  }
};
